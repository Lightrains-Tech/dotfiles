" General
set number  " Show line numbers
set relativenumber  "This turns on relative numbering
set linebreak " Break lines at word (requires Wrap lines)
set showbreak=+++ " Wrap-broken line prefix
set textwidth=100 " Line wrap (number of cols)
set showmatch " Highlight matching brace

set hlsearch  " Highlight all search results
set smartcase " Enable smart-case search
set ignorecase  " Always case-insensitive
set incsearch " Searches for strings incrementally

set autoindent  " Auto-indent new lines
set smartindent " Enable smart-indent
set smarttab  " Enable smart-tabs
set softtabstop=4 " Number of spaces per Tab

"" Advanced
set ruler " Show row and column ruler information
set showtabline=0 " Show tab bar

set undolevels=200  " Number of undo levels
set backspace=indent,eol,start  " Backspace behaviour

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab
set clipboard=unnamed

set regexpengine=1
set autoread
set acd

let mapleader = "," " Map leader

" plugins
call plug#begin('~/.vim/plugged')

Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }
Plug 'pangloss/vim-javascript'
Plug 'Chiel92/vim-autoformat'
Plug 'tpope/vim-surround'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-surround'
Plug 'w0ng/vim-hybrid'
Plug 'godlygeek/tabular'
Plug 'terryma/vim-multiple-cursors'
Plug 'sjl/gundo.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'ternjs/tern_for_vim'
Plug 'isRuslan/vim-es6'
Plug 'scrooloose/nerdtree'
Plug 'itchyny/lightline.vim'
Plug 'othree/javascript-libraries-syntax.vim'
Plug 'raimondi/delimitmate'
Plug 'wincent/command-t'

call plug#end()

" au BufWrite * :Autoformat

" crlp
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn|node_modules)$'
let g:ctrlp_user_command = [
      \ '.git', 'cd %s && git ls-files . -co --exclude-standard',
      \ 'find %s -type f'
      \ ]
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows


" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['standard']

" Color scheme
set background=dark
let g:hybrid_custom_term_colors = 1
let g:hybrid_reduced_contrast = 1
colorscheme hybrid

" gundo
nnoremap <F5> :GundoToggle<CR>
nnoremap <F6> :SyntasticToggleMode<CR>

" Remove trailing spaces
autocmd BufWritePre * :%s/\s\+$//e

" force vim
map <Left> :echo "damnit!"<cr>
map <Right> :echo "1 + 1 = ? "<cr>
map <Up> :echo "this is why you fail"<cr>
map <Down> :echo "nooooo!"<cr>

" evil mode
inoremap <Left> <nop>
inoremap <Right> <nop>
inoremap <Up> <nop>
inoremap <Down> <nop>

" nerdtree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
map <C-n> :NERDTreeToggle<CR>

" js libs
let g:used_javascript_libs = 'jquery,react,jasmine'
